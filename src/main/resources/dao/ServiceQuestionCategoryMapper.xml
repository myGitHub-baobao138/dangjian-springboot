<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.partybuilding.webserver.dao.service.ServiceQuestionCategoryMapper">
  <resultMap id="BaseResultMap" type="com.partybuilding.webserver.entity.service.ServiceQuestionCategory">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="founder_id" jdbcType="VARCHAR" property="founderId" />
    <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, category_name, remark, founder_id, creation_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from service_question_category
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <!--获取问题分类列表-->
  <select id="getQuestionRegistrationList"
          resultType="com.partybuilding.webserver.dto.service.question.QuestionRegistrationDTO">
    select
      sqc.id as id,
      category_name as categoryName,
      remark,
       DATE_FORMAT(creation_time,'%Y/%m/%d') as creationTime,
      sys_party_member_information.name as founderName
    from service_question_category as sqc left join sys_party_member_information on sqc.founder_id = sys_party_member_information.id
    order by creation_time desc
  </select>

  <!--获取考题数-->
  <select id="getCount" resultType="java.lang.Integer">
    select
      count(*)
    from service_examination_management where
      question_category_id = (select id from service_question_category where category_name = #{name,jdbcType=VARCHAR})
  </select>

  <!--获取问题分类列表按分类名称查询-->
  <select id="getListByRegistration" parameterType="com.partybuilding.webserver.dto.service.question.GetQuestionCategoryQueryInputDTO"
          resultType="com.partybuilding.webserver.dto.service.question.QuestionRegistrationDTO">
    select
      sqc.id as id,
      category_name as categoryName,
      remark,
       DATE_FORMAT(creation_time,'%Y/%m/%d') as creationTime,
      sys_party_member_information.name as founderName
      from service_question_category  sqc left join sys_party_member_information on sqc.founder_id = sys_party_member_information.id
      where category_name like concat('%', concat(#{categoryName,jdbcType=VARCHAR},'%'))
      order by creation_time desc
  </select>


  <!-- 查询分类是否存在 -->
  <select id="checkIsExistCategoryName" parameterType="java.lang.String">
    select count(*)
    from service_question_category
    where category_name = #{categoryName,jdbcType=VARCHAR}
  </select>

  <!-- 获取分类id和name -->
  <select id="getCategoryIdNameList" resultType="com.partybuilding.webserver.dto.service.question.QuestionCategoryNameIdDTO">
    select id , category_name as categoryName
    from service_question_category
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from service_question_category
    where id = #{id,jdbcType=VARCHAR}
  </delete>

   <delete id="deleteExaminationCategoryRecord" parameterType="java.lang.String">
       delete from service_examination_management
       where question_category_id = #{questionCategoryId,jdbcType=VARCHAR}
   </delete>

  <insert id="insert" parameterType="com.partybuilding.webserver.entity.service.ServiceQuestionCategory">
    insert into service_question_category (id, category_name, remark, 
      founder_id, creation_time)
    values (#{id,jdbcType=VARCHAR}, #{categoryName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{founderId,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP})
  </insert>

  <!--添加问题分类-->
  <insert id="addQuestionCategory" parameterType="com.partybuilding.webserver.dto.service.question.QuestionCategoryDTO">
    insert into service_question_category (id, category_name, remark,
      founder_id, creation_time)
    select #{id,jdbcType=VARCHAR}, #{categoryName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{founder,jdbcType=VARCHAR}, #{creationTime,jdbcType=VARCHAR}
    from dual
    where not exists
    (select * from service_question_category where category_name = #{categoryName,jdbcType=VARCHAR})
  </insert>


  <insert id="insertSelective" parameterType="com.partybuilding.webserver.entity.service.ServiceQuestionCategory">
    insert into service_question_category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="founderId != null">
        founder_id,
      </if>
      <if test="creationTime != null">
        creation_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="founderId != null">
        #{founderId,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.partybuilding.webserver.entity.service.ServiceQuestionCategory">
    update service_question_category
    <set>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="founderId != null">
        founder_id = #{founderId,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.partybuilding.webserver.entity.service.ServiceQuestionCategory">
    update service_question_category
    set category_name = #{categoryName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      founder_id = #{founderId,jdbcType=VARCHAR},
      creation_time = #{creationTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="editQuestionCategory" parameterType="com.partybuilding.webserver.dto.service.question.EditQuestionCategoryDTO">
    update service_question_category
    set category_name = #{categoryName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR} and   not exists (select 1 from
    (select 1 from service_question_category where category_name = #{categoryName,jdbcType=VARCHAR} and id != #{id,jdbcType=VARCHAR}) a)
  </update>
</mapper>