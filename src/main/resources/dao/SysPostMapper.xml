<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.partybuilding.webserver.dao.system.SysPostMapper">
    <resultMap id="BaseResultMap" type="com.partybuilding.webserver.entity.system.SysPost">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="associatedNumber" jdbcType="INTEGER" property="associatedNumber"/>
        <result column="createPartyId" jdbcType="VARCHAR" property="createPartyId"/>
        <result column="createPartyName" jdbcType="VARCHAR" property="createPartyName"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="rank" jdbcType="TINYINT" property="postRank"/>
    </resultMap>
    <resultMap id="findPostNameAndPostIdResultMap" type="com.partybuilding.webserver.dto.system.post.PostNameAndPostId">
        <id column="id" jdbcType="VARCHAR" property="postId"/>
        <id column="name" jdbcType="VARCHAR" property="postName"/>
    </resultMap>
    <!--通过职务名称模糊查找职务信息Sql-->
    <sql id="findPostInfoByNameSql">
        <if test="postName != null and postName != ''">
            select post.id,post.name,spmi.name as createPartyName,count(spop.id) as associatedNumber,post.create_time as
            createTime,post.rank from sys_post post left join sys_party_member_information spmi on spmi.id =
            post.party_id left join sys_party_organization_post spop on spop.post_id = post.id where post.name like
            CONCAT('%',#{postName},'%') group by post.name
        </if>
        <if test="postName == null or postName == ''">
            select post.id,post.name,spmi.name as createPartyName,count(spop.id) as associatedNumber,post.create_time as
            createTime,post.rank from sys_post post left join sys_party_member_information spmi on spmi.id =
            post.party_id left join sys_party_organization_post spop on spop.post_id = post.id where post.name like
            CONCAT('%%') group by post.name
        </if>
    </sql>
    <!--通过职务名称模糊查找职务信息-->
    <select id="findPostInfoByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        <include refid="findPostInfoByNameSql"/>
    </select>

    <!--通过职务id 删除职务信息-->
    <update id="deletePostInfoById" parameterType="java.lang.String">
      delete from sys_post where id = #{postId,jdbcType=VARCHAR}
    </update>

    <!--查询职务id和职务名称-->
    <select id="findPostNameAndPostId" resultMap="findPostNameAndPostIdResultMap">
        select post.id,post.name from sys_post post
    </select>

    <!--添加职务信息-->
    <insert id="addPostInfo" parameterType="com.partybuilding.webserver.dto.system.post.RealPostDTO">
        insert into sys_post (id,name,party_id,create_time,`rank`) values (#{id,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{partyId,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{rank,jdbcType=INTEGER})
    </insert>

    <!--通过职务名称查询职务是否存在-->
    <select id="isPostExist" parameterType="java.lang.String" resultMap="findPostNameAndPostIdResultMap">
         select post.id,post.name from sys_post post where post.name = #{postName,jdbcType=VARCHAR}
    </select>

    <!--修改职务信息-->
    <insert id="modifyPostInfo" parameterType="com.partybuilding.webserver.dto.system.post.RealPostDTO">
        update sys_post set name = #{name,jdbcType=VARCHAR}, party_id = #{partyId,jdbcType=VARCHAR}, create_time = #{createTime,jdbcType=VARCHAR}, `rank` = #{rank,jdbcType=INTEGER} where id = #{id,jdbcType=VARCHAR}
    </insert>
</mapper>
