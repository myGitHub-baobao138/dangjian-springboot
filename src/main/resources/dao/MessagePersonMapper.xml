<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.partybuilding.webserver.dao.MessagePersonDao">

    <resultMap type="com.partybuilding.webserver.entity.MessagePerson" id="MessagePersonMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="messageId" column="message_id" jdbcType="VARCHAR"/>
        <result property="partyId" column="party_id" jdbcType="VARCHAR"/>
        <result property="read" column="read" jdbcType="OTHER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MessagePersonMap">
        select
          id, message_id, party_id, read
        from party_building.message_person
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MessagePersonMap">
        select
          id, message_id, party_id, read
        from party_building.message_person
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="MessagePersonMap">
        select
          id, message_id, party_id, read
        from party_building.message_person
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="messageId != null and messageId != ''">
                and message_id = #{messageId}
            </if>
            <if test="partyId != null and partyId != ''">
                and party_id = #{partyId}
            </if>
            <if test="read != null">
                and read = #{read}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into party_building.message_person(message_id, message_receive_id, is_read)
        values (#{messageId}, #{partyId}, #{read})
    </insert>

    <insert id="insertAll" >
        insert into party_building.message_person(id,message_id,message_receive_id, is_read)
        values
        <foreach collection="list" item="person" separator=",">
            (#{person.id},#{person.messageId}, #{person.partyId}, #{person.read})
        </foreach>

    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update party_building.message_person
        <set>
            <if test="messageId != null and messageId != ''">
                message_id = #{messageId},
            </if>
            <if test="partyId != null and partyId != ''">
                party_id = #{partyId},
            </if>
            <if test="read != null">
                read = #{read},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from party_building.message_person where id = #{id}
    </delete>

</mapper>